networks:
  app-tier:
    ipam:
      config:
      - subnet: 172.25.124.0/24
      driver: default
services:
  CollectorService:
    build:
      context: C:\Users\nikol\source\repos\ApiService\CollectorService
      dockerfile: Dockerfile
    depends_on:
    - rabbitmq
    image: collectorservice
    networks:
      app-tier: null
    ports:
    - published: 8881
      target: 80
    - published: 8883
      target: 443
  MongoService:
    build:
      context: C:\Users\nikol\source\repos\ApiService\MongoService
      dockerfile: Dockerfile
    depends_on:
    - mongo
    - rabbitmq
    environment:
      MongoDB__Host: 172.25.124.82
    image: mongoservice
    networks:
      app-tier: null
    ports:
    - published: 8885
      target: 80
    - published: 8886
      target: 443
  NodejsService:
    depends_on:
    - mongo
    - rabbitmq
    image: nodejsservice
    networks:
      app-tier: null
    ports:
    - published: 4000
      target: 4000
  StorageService:
    build:
      context: C:\Users\nikol\source\repos\ApiService\StorageService
      dockerfile: Dockerfile
    depends_on:
    - db
    - rabbitmq
    image: storageservice
    networks:
      app-tier: null
    ports:
    - published: 8882
      target: 80
    - published: 8884
      target: 443
  db:
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: pAS123456Xx
    image: microsoft/mssql-server-windows-developer
    networks:
      app-tier:
        ipv4_address: 172.25.124.81
  mongo:
    environment:
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_ROOT_USERNAME: root
    image: mongo:3.6
    networks:
      app-tier:
        ipv4_address: 172.25.124.82
    ports:
    - published: 27017
      target: 27017
    restart: always
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3
    networks:
      app-tier:
        ipv4_address: 172.25.124.88
    ports:
    - published: 5672
      target: 5672
    - published: 15672
      target: 15672
version: '3.4'